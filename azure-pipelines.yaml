trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: aws-creds
  - name: awsRegion
    value: "us-east-1"
  - name: ecrRepository
    value: "638067550830.dkr.ecr.us-east-1.amazonaws.com/2048"
  - name: clusterName
    value: "eks-demo-cluster"
  - name: helmRelease
    value: "game-2048"
  - name: helmChartPath
    value: "./helm/2048"

stages:
  - stage: Build
    jobs:
      - job: BuildAndPush
        steps:
          - checkout: self

          - script: |
              set -e
              echo " Checking AWS environment variables..."
              echo "AWS_ACCESS_KEY_ID is $AWS_ACCESS_KEY_ID"
              echo "AWS_DEFAULT_REGION is $AWS_DEFAULT_REGION"

              echo "üîê Logging in to ECR..."
              aws ecr get-login-password --region $(awsRegion) | docker login --username AWS --password-stdin $(ecrRepository)

              echo " Docker info after login:"
              docker info

              echo " Building Docker image..."
              docker build -t game-2048:$(Build.BuildId) .

              echo "Tagging Docker image..."
              docker tag game-2048:$(Build.BuildId) $(ecrRepository):$(Build.BuildId)

              echo "Pushing Docker image to ECR..."
              docker push $(ecrRepository):$(Build.BuildId)
            displayName: "Build & Push Docker Image"
            env:
              AWS_ACCESS_KEY_ID: $(AWS-ACCESS-KEY-ID)
              AWS_SECRET_ACCESS_KEY: $(AWS-SECRET-ACCESS-KEY)
              AWS_DEFAULT_REGION: $(AWS-DEFAULT-REGION)

          - script: |
              echo "üîé Scanning Docker image..."
              trivy image --exit-code 1 --severity HIGH,CRITICAL $(ecrRepository):$(Build.BuildId)
            displayName: "Scan Docker Image"

  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployToEKS
        steps:
          - checkout: self

          - script: |
              set -e
              echo "üîÑ Updating kubeconfig..."
              aws eks --region $(awsRegion) update-kubeconfig --name $(clusterName)

              echo "üö¢ Deploying with Helm..."
              helm upgrade --install $(helmRelease) $(helmChartPath) \
                --set image.repository=$(ecrRepository) \
                --set image.tag=$(Build.BuildId) \
                --set image.pullPolicy=Always \
                --namespace default
            displayName: "Deploy to EKS with Helm"

          - script: |
              echo "‚úÖ Checking rollout status..."
              kubectl rollout status deployment/$(helmRelease)

              echo "üîé Listing pods..."
              kubectl get pods
            displayName: "Verify Deployment"

          - script: |
              echo "‚úÖ Smoke tests completed successfully."
            displayName: "Post-deploy Smoke Test"

  - stage: Notify
    dependsOn: Deploy
    condition: succeeded()
    jobs:
      - job: Notify
        steps:
          - script: |
              echo "üéâ ‚úÖ Deployment completed successfully! You can now access your 2048 app via the LoadBalancer."
              # Example: here you can add Slack or email notifications.
            displayName: "Notify Team"
